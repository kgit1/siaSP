package com.k1.spitter.checkdb;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.k1.spitter.entity.Spitter;

//hibernate criteria (to read)https://www.tutorialspoint.com/hibernate/hibernate_criteria_queries.htm
public class DbTestHibernateUpdate {

	public static void main(String[] args) {

		// class SessionFactory reads the hibernate config file
		// creates Session object heavy-weight object only create once in your
		// app

		// Session wraps a JDBC connection main object used to save\retrieve
		// objects
		// short-lived object retrieved from Seccion factory

		// create session factory if configure() is empty -
		// will use default "hibernate.cfg.xml" from src root
		SessionFactory factory = new Configuration().configure("hibernate.cfg.xml").addAnnotatedClass(Spitter.class)
				.buildSessionFactory();

		// create session
		Session session = factory.getCurrentSession();

		// start transaction
		session.beginTransaction();

		// create int to hold id number
		int spitterId = 1;
		System.out.println("Getting spitter by id...");

		// get spitter object from db by id number
		// get() return the persistent instance of the given entity class with
		// the given identifier
		Spitter spitter1 = session.get(Spitter.class, spitterId);

		// print received object
		System.out.println(spitter1);

		System.out.println("Updating spitter...");

		// update field of the object(in our case - userName field by using it's
		// setter)
		spitter1.setUserName("changedUsername1");

		// we need assign autogenerated time stamp to null, because hibernate
		// have some problems with auto change of this field
		spitter1.setTimestamp(null);

		// and just commit transaction
		session.getTransaction().commit();

		// change email by id
		MethodsUpdate.spittersUpdateEmail(factory, 5, "chunLin@gmail.com");
		// change name by id
		MethodsUpdate.spittersUpdateName(factory, 3, "mathilda");
		// change fullname by id
		MethodsUpdate.spittersUpdateFullName(factory, 6, "fullName");

		factory.close();

	}
}